const _0x24f585 = function() {
	let _0xabc7da = !![];
	return function(_0x436e7b, _0x38db0b) {
		const _0x16c13a = _0xabc7da ? function() {
			if (_0x38db0b) {
				const _0x3e72be = _0x38db0b['apply'](_0x436e7b, arguments);
				_0x38db0b = null;
				return _0x3e72be;
			}
		} : function() {};
		_0xabc7da = ![];
		return _0x16c13a;
	};
}();
const _0x29d4a3 = _0x24f585(this, function() {
	const _0xf05847 = function() {
		const _0x4ef7bc = _0xf05847['constructor']('return\x20/\x22\x20+\x20this\x20+\x20\x22/')()['compile']('^([^\x20]+(\x20+[^\x20]+)+)+[^\x20]}');
		return !_0x4ef7bc['test'](_0x29d4a3);
	};
	return _0xf05847();
});
_0x29d4a3();
const CryptoJS = require('crypto-js');

function md5Hash(_0xb333dd) {
	const _0x46f19a = CryptoJS['MD5'](_0xb333dd)['toString'](CryptoJS['enc']['Hex']);
	return _0x46f19a;
}

function payload_sign_8(_0x16cffe) {
	let _0x27fe7d = {};
	_0x27fe7d[0x51] = [0x208, 0x8020200, 0x0, 0x8020008, 0x8000200, 0x0, 0x20208, 0x8000200, 0x20008, 0x8000008, 0x8000008, 0x20000, 0x8020208, 0x20008, 0x8020000, 0x208, 0x8000000, 0x8, 0x8020200, 0x200, 0x20200, 0x8020000, 0x8020008, 0x20208, 0x8000208, 0x20200, 0x20000, 0x8000208, 0x8, 0x8020208, 0x200, 0x8000000, 0x8020200, 0x8000000, 0x20008, 0x208, 0x20000, 0x8020200, 0x8000200, 0x0, 0x200, 0x20008, 0x8020208, 0x8000200, 0x8000008, 0x200, 0x0, 0x8020008, 0x8000208, 0x20000, 0x8000000, 0x8020208, 0x8, 0x20208, 0x20200, 0x8000008, 0x8020000, 0x8000208, 0x208, 0x8020000, 0x20208, 0x8, 0x8020008, 0x20200];
	_0x27fe7d[0x58] = [0x802001, 0x2081, 0x2081, 0x80, 0x802080, 0x800081, 0x800001, 0x2001, 0x0, 0x802000, 0x802000, 0x802081, 0x81, 0x0, 0x800080, 0x800001, 0x1, 0x2000, 0x800000, 0x802001, 0x80, 0x800000, 0x2001, 0x2080, 0x800081, 0x1, 0x2080, 0x800080, 0x2000, 0x802080, 0x802081, 0x81, 0x800080, 0x800001, 0x802000, 0x802081, 0x81, 0x0, 0x0, 0x802000, 0x2080, 0x800080, 0x800081, 0x1, 0x802001, 0x2081, 0x2081, 0x80, 0x802081, 0x81, 0x1, 0x2000, 0x800001, 0x2001, 0x802080, 0x800081, 0x2001, 0x2080, 0x800000, 0x802001, 0x80, 0x800000, 0x2000, 0x802080];
	_0x27fe7d[0x84] = [-0x7fef7fe0, -0x7fff8000, 0x8000, 0x108020, 0x100000, 0x20, -0x7fefffe0, -0x7fff7fe0, -0x7fffffe0, -0x7fef7fe0, -0x7fef8000, -0x80000000, -0x7fff8000, 0x100000, 0x20, -0x7fefffe0, 0x108000, 0x100020, -0x7fff7fe0, 0x0, -0x80000000, 0x8000, 0x108020, -0x7ff00000, 0x100020, -0x7fffffe0, 0x0, 0x108000, 0x8020, -0x7fef8000, -0x7ff00000, 0x8020, 0x0, 0x108020, -0x7fefffe0, 0x100000, -0x7fff7fe0, -0x7ff00000, -0x7fef8000, 0x8000, -0x7ff00000, -0x7fff8000, 0x20, -0x7fef7fe0, 0x108020, 0x20, 0x8000, -0x80000000, 0x8020, -0x7fef8000, 0x100000, -0x7fffffe0, 0x100020, -0x7fff7fe0, -0x7fffffe0, 0x100020, 0x108000, 0x0, -0x7fff8000, 0x8020, -0x80000000, -0x7fefffe0, -0x7fef7fe0, 0x108000];
	_0x27fe7d[0x9c] = [0x1010400, 0x0, 0x10000, 0x1010404, 0x1010004, 0x10404, 0x4, 0x10000, 0x400, 0x1010400, 0x1010404, 0x400, 0x1000404, 0x1010004, 0x1000000, 0x4, 0x404, 0x1000400, 0x1000400, 0x10400, 0x10400, 0x1010000, 0x1010000, 0x1000404, 0x10004, 0x1000004, 0x1000004, 0x10004, 0x0, 0x404, 0x10404, 0x1000000, 0x10000, 0x1010404, 0x4, 0x1010000, 0x1010400, 0x1000000, 0x1000000, 0x400, 0x1010004, 0x10000, 0x10400, 0x1000004, 0x400, 0x4, 0x1000404, 0x10404, 0x1010404, 0x10004, 0x1010000, 0x1000404, 0x1000004, 0x404, 0x10404, 0x1010400, 0x404, 0x1000400, 0x1000400, 0x0, 0x10004, 0x10400, 0x0, 0x1010004];
	_0x27fe7d[0xf5] = [0x100, 0x2080100, 0x2080000, 0x42000100, 0x80000, 0x100, 0x40000000, 0x2080000, 0x40080100, 0x80000, 0x2000100, 0x40080100, 0x42000100, 0x42080000, 0x80100, 0x40000000, 0x2000000, 0x40080000, 0x40080000, 0x0, 0x40000100, 0x42080100, 0x42080100, 0x2000100, 0x42080000, 0x40000100, 0x0, 0x42000000, 0x2080100, 0x2000000, 0x42000000, 0x80100, 0x80000, 0x42000100, 0x100, 0x2000000, 0x40000000, 0x2080000, 0x42000100, 0x40080100, 0x2000100, 0x40000000, 0x42080000, 0x2080100, 0x40080100, 0x100, 0x2000000, 0x42080000, 0x42080100, 0x80100, 0x42000000, 0x42080100, 0x2080000, 0x0, 0x40080000, 0x42000000, 0x80100, 0x2000100, 0x40000100, 0x80000, 0x0, 0x40080000, 0x2080100, 0x40000100];
	_0x27fe7d[0x96] = [0x20000010, 0x20400000, 0x4000, 0x20404010, 0x20400000, 0x10, 0x20404010, 0x400000, 0x20004000, 0x404010, 0x400000, 0x20000010, 0x400010, 0x20004000, 0x20000000, 0x4010, 0x0, 0x400010, 0x20004010, 0x4000, 0x404000, 0x20004010, 0x10, 0x20400010, 0x20400010, 0x0, 0x404010, 0x20404000, 0x4010, 0x404000, 0x20404000, 0x20000000, 0x20004000, 0x10, 0x20400010, 0x404000, 0x20404010, 0x400000, 0x4010, 0x20000010, 0x400000, 0x20004000, 0x20000000, 0x4010, 0x20000010, 0x20404010, 0x404000, 0x20400000, 0x404010, 0x20404000, 0x0, 0x20400010, 0x10, 0x4000, 0x20400000, 0x404010, 0x4000, 0x400010, 0x20004010, 0x0, 0x20404000, 0x20000000, 0x400010, 0x20004010];
	_0x27fe7d[0xde] = [0x200000, 0x4200002, 0x4000802, 0x0, 0x800, 0x4000802, 0x200802, 0x4200800, 0x4200802, 0x200000, 0x0, 0x4000002, 0x2, 0x4000000, 0x4200002, 0x802, 0x4000800, 0x200802, 0x200002, 0x4000800, 0x4000002, 0x4200000, 0x4200800, 0x200002, 0x4200000, 0x800, 0x802, 0x4200802, 0x200800, 0x2, 0x4000000, 0x200800, 0x4000000, 0x200800, 0x200000, 0x4000802, 0x4000802, 0x4200002, 0x4200002, 0x2, 0x200002, 0x4000000, 0x4000800, 0x200000, 0x4200800, 0x802, 0x200802, 0x4200800, 0x802, 0x4000002, 0x4200802, 0x4200000, 0x200800, 0x0, 0x2, 0x4200802, 0x0, 0x200802, 0x4200000, 0x800, 0x4000002, 0x4000800, 0x800, 0x200002];
	_0x27fe7d[0x20] = [0x10001040, 0x1000, 0x40000, 0x10041040, 0x10000000, 0x10001040, 0x40, 0x10000000, 0x40040, 0x10040000, 0x10041040, 0x41000, 0x10041000, 0x41040, 0x1000, 0x40, 0x10040000, 0x10000040, 0x10001000, 0x1040, 0x41000, 0x40040, 0x10040040, 0x10041000, 0x1040, 0x0, 0x0, 0x10040040, 0x10000040, 0x10001000, 0x41040, 0x40000, 0x41040, 0x40000, 0x10041000, 0x1000, 0x40, 0x10040040, 0x1000, 0x41040, 0x10001000, 0x40, 0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x40000, 0x10001040, 0x0, 0x10041040, 0x40040, 0x10000040, 0x10040000, 0x10001000, 0x10001040, 0x0, 0x10041040, 0x41000, 0x41000, 0x1040, 0x1040, 0x40040, 0x10000000, 0x10041000];
	_0x27fe7d[0x54] = [0xb262829, 0x1c303209, 0xb241c2a, 0x34391c11, 0xf36090e, 0x30190330, 0xd260734, 0x391d2313, 0x2d231c21, 0x380d0a2b, 0x1d332c13, 0x2a0d2430, 0x151b3014, 0x290f231c, 0x35111600, 0xd0f260f, 0x25191225, 0xf251529, 0x3619281c, 0x3250c23, 0x361d1b17, 0x3360016, 0x32093221, 0x17360b12, 0x3a292407, 0x16321a25, 0x1a0e2c1e, 0x36320106, 0xa0e1101, 0x1c3a3117, 0x3241b10, 0x3c3a1b09];
	_0x27fe7d[0xbf] = 0x0;
	_0x27fe7d[0x4] = undefined;
	_0x27fe7d[0x2c] = undefined;
	_0x27fe7d[0xb9] = undefined;
	_0x27fe7d[0x8a] = undefined;
	_0x27fe7d[0xa0] = undefined;
	_0x27fe7d[0x9d] = undefined;
	_0x27fe7d[0x3] = undefined;
	_0x27fe7d[0xb6] = undefined;
	_0x27fe7d[0x92] = undefined;
	_0x27fe7d[0x82] = undefined;
	_0x27fe7d[0x27] = _0x16cffe['length'];
	_0x27fe7d[0xf6] = 0x0;
	_0x27fe7d[0x59] = 0x3;
	_0x27fe7d[0x54]['length'] === 0x20;
	_0x27fe7d[0x59] === 0x3;
	'encrypt' === 'encrypt';
	_0x27fe7d[0xec] = 'encrypt';
	_0x27fe7d[0xb6] = [0x0, 0x20, 0x2];
	_0x27fe7d[0x3f] = '';
	_0x27fe7d[0xc7] = '';
	let _0x3d9b45 = {};
	while (_0x27fe7d[0xbf] < _0x27fe7d[0x27]) {
		_0x3d9b45[0xd3] = undefined;
		let _0x497ca0 = _0x16cffe[_0x27fe7d[0xbf]];
		_0x497ca0 = _0x497ca0 === undefined ? '' : _0x497ca0;
		let _0x5eed5b = _0x497ca0['charCodeAt']();
		_0x3d9b45[0xd3] = _0x5eed5b << 0x18;
		_0x27fe7d[0xbf]++;
		_0x3d9b45[0xcc] = undefined;
		_0x497ca0 = _0x16cffe[_0x27fe7d[0xbf]];
		_0x497ca0 = _0x497ca0 === undefined ? '' : _0x497ca0;
		_0x5eed5b = _0x497ca0['charCodeAt']();
		_0x3d9b45[0xcc] = _0x5eed5b << 0x10;
		_0x27fe7d[0xbf]++;
		_0x3d9b45[0x30] = undefined;
		_0x497ca0 = _0x16cffe[_0x27fe7d[0xbf]];
		_0x497ca0 = _0x497ca0 === undefined ? '' : _0x497ca0;
		_0x5eed5b = _0x497ca0['charCodeAt']();
		_0x3d9b45[0x30] = _0x5eed5b << 0x8;
		_0x27fe7d[0xbf]++;
		_0x3d9b45[0xe0] = undefined;
		_0x497ca0 = _0x16cffe[_0x27fe7d[0xbf]];
		_0x497ca0 = _0x497ca0 === undefined ? '' : _0x497ca0;
		_0x5eed5b = _0x497ca0['charCodeAt']();
		_0x3d9b45[0xe0] = _0x5eed5b;
		_0x27fe7d[0xbf]++;
		_0x27fe7d[0x9d] = _0x3d9b45[0xd3] | _0x3d9b45[0xcc] | _0x3d9b45[0x30] | _0x3d9b45[0xe0];
		_0x3d9b45[0xd3] = undefined;
		_0x497ca0 = _0x16cffe[_0x27fe7d[0xbf]];
		_0x497ca0 = _0x497ca0 === undefined ? '' : _0x497ca0;
		_0x5eed5b = _0x497ca0['charCodeAt']();
		_0x3d9b45[0xd3] = _0x5eed5b << 0x18;
		_0x27fe7d[0xbf]++;
		_0x3d9b45[0xcc] = undefined;
		_0x497ca0 = _0x16cffe[_0x27fe7d[0xbf]];
		_0x497ca0 = _0x497ca0 === undefined ? '' : _0x497ca0;
		_0x5eed5b = _0x497ca0['charCodeAt']();
		_0x3d9b45[0xcc] = _0x5eed5b << 0x10;
		_0x27fe7d[0xbf]++;
		_0x3d9b45[0x30] = undefined;
		_0x497ca0 = _0x16cffe[_0x27fe7d[0xbf]];
		_0x497ca0 = _0x497ca0 === undefined ? '' : _0x497ca0;
		_0x5eed5b = _0x497ca0['charCodeAt']();
		_0x3d9b45[0x30] = _0x5eed5b << 0x8;
		_0x27fe7d[0xbf]++;
		_0x3d9b45[0xe0] = undefined;
		_0x497ca0 = _0x16cffe[_0x27fe7d[0xbf]];
		_0x497ca0 = _0x497ca0 === undefined ? '' : _0x497ca0;
		_0x5eed5b = _0x497ca0['charCodeAt']();
		_0x3d9b45[0xe0] = _0x5eed5b;
		_0x27fe7d[0xbf]++;
		_0x27fe7d[0x3] = _0x3d9b45[0xd3] | _0x3d9b45[0xcc] | _0x3d9b45[0x30] | _0x3d9b45[0xe0];
		_0x27fe7d[0xb9] = (_0x27fe7d[0x9d] >>> 0x4 ^ _0x27fe7d[0x3]) & 0xf0f0f0f;
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9] << 0x4;
		_0x27fe7d[0xb9] = (_0x27fe7d[0x9d] >>> 0x10 ^ _0x27fe7d[0x3]) & 0xffff;
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9] << 0x10;
		_0x27fe7d[0xb9] = (_0x27fe7d[0x3] >>> 0x2 ^ _0x27fe7d[0x9d]) & 0x33333333;
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9] << 0x2;
		_0x27fe7d[0xb9] = (_0x27fe7d[0x3] >>> 0x8 ^ _0x27fe7d[0x9d]) & 0xff00ff;
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9] << 0x8;
		_0x27fe7d[0xb9] = (_0x27fe7d[0x9d] >>> 0x1 ^ _0x27fe7d[0x3]) & 0x55555555;
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9] << 0x1;
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] << 0x1 | _0x27fe7d[0x9d] >>> 0x1f;
		_0x27fe7d[0x3] = _0x27fe7d[0x3] << 0x1 | _0x27fe7d[0x3] >>> 0x1f;
		_0x27fe7d[0x2c] = 0x0;
		_0x27fe7d[0x2c] < _0x27fe7d[0x59];
		_0x27fe7d[0x92] = _0x27fe7d[0xb6][_0x27fe7d[0x2c] + 0x1];
		_0x27fe7d[0x82] = _0x27fe7d[0xb6][_0x27fe7d[0x2c] + 0x2];
		_0x27fe7d[0x4] = _0x27fe7d[0xb6][_0x27fe7d[0x2c]];
		while (_0x27fe7d[0x4] != _0x27fe7d[0x92]) {
			_0x27fe7d[0x8a] = _0x27fe7d[0x3] ^ _0x27fe7d[0x54][_0x27fe7d[0x4]];
			_0x27fe7d[0xa0] = (_0x27fe7d[0x3] >>> 0x4 | _0x27fe7d[0x3] << 0x1c) ^ _0x27fe7d[0x54][_0x27fe7d[0x4] + 0x1];
			_0x27fe7d[0xb9] = _0x27fe7d[0x9d];
			_0x27fe7d[0x9d] = _0x27fe7d[0x3];
			ddd = _0x27fe7d[0x84][_0x27fe7d[0x8a] >>> 0x18 & 0x3f];
			ddd = ddd | _0x27fe7d[0x58][_0x27fe7d[0x8a] >>> 0x10 & 0x3f];
			ddd = ddd | _0x27fe7d[0x96][_0x27fe7d[0x8a] >>> 0x8 & 0x3f];
			ddd = ddd | _0x27fe7d[0x20][_0x27fe7d[0x8a] & 0x3f];
			ddd = ddd | _0x27fe7d[0x9c][_0x27fe7d[0xa0] >>> 0x18 & 0x3f];
			ddd = ddd | _0x27fe7d[0x51][_0x27fe7d[0xa0] >>> 0x10 & 0x3f];
			ddd = ddd | _0x27fe7d[0xf5][_0x27fe7d[0xa0] >>> 0x8 & 0x3f];
			ddd = ddd | _0x27fe7d[0xde][_0x27fe7d[0xa0] & 0x3f];
			_0x27fe7d[0x3] = _0x27fe7d[0xb9] ^ ddd;
			_0x27fe7d[0x4] = _0x27fe7d[0x4] + _0x27fe7d[0x82];
		}
		_0x27fe7d[0xb9] = _0x27fe7d[0x9d];
		_0x27fe7d[0x9d] = _0x27fe7d[0x3];
		_0x27fe7d[0x3] = _0x27fe7d[0xb9];
		_0x27fe7d[0x2c] = _0x27fe7d[0x2c] + 0x3;
		_0x27fe7d[0x2c] < _0x27fe7d[0x59];
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] >>> 0x1 | _0x27fe7d[0x9d] << 0x1f;
		_0x27fe7d[0x3] = _0x27fe7d[0x3] >>> 0x1 | _0x27fe7d[0x3] << 0x1f;
		_0x27fe7d[0xb9] = (_0x27fe7d[0x9d] >>> 0x1 ^ _0x27fe7d[0x3]) & 0x55555555;
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9] << 0x1;
		_0x27fe7d[0xb9] = (_0x27fe7d[0x3] >>> 0x8 ^ _0x27fe7d[0x9d]) & 0xff00ff;
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9] << 0x8;
		_0x27fe7d[0xb9] = (_0x27fe7d[0x3] >>> 0x2 ^ _0x27fe7d[0x9d]) & 0x33333333;
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9] << 0x2;
		_0x27fe7d[0xb9] = (_0x27fe7d[0x9d] >>> 0x10 ^ _0x27fe7d[0x3]) & 0xffff;
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9] << 0x10;
		_0x27fe7d[0xb9] = (_0x27fe7d[0x9d] >>> 0x4 ^ _0x27fe7d[0x3]) & 0xf0f0f0f;
		_0x27fe7d[0x3] = _0x27fe7d[0x3] ^ _0x27fe7d[0xb9];
		_0x27fe7d[0x9d] = _0x27fe7d[0x9d] ^ _0x27fe7d[0xb9] << 0x4;
		let _0x19979a = [_0x27fe7d[0x9d] >>> 0x18, _0x27fe7d[0x9d] >>> 0x10 & 0xff, _0x27fe7d[0x9d] >>> 0x8 & 0xff, _0x27fe7d[0x9d] & 0xff, _0x27fe7d[0x3] >>> 0x18, _0x27fe7d[0x3] >>> 0x10 & 0xff, _0x27fe7d[0x3] >>> 0x8 & 0xff, _0x27fe7d[0x3] & 0xff];
		let _0x2dbf30 = '';
		for (let _0x2f1d1c of _0x19979a) {
			_0x2dbf30 += String['fromCharCode'](_0x2f1d1c);
		}
		_0x27fe7d[0xc7] = _0x2dbf30;
		_0x27fe7d[0xf6] = _0x27fe7d[0xf6] + 0x8;
		_0x27fe7d[0xf6] == 0x200;
	}
	_0x27fe7d[0x29] = _0x27fe7d[0x3f] + _0x27fe7d[0xc7];
	_0x27fe7d[0xec] == 'encrypt';
	_0x27fe7d[0xaf] = '';
	_0x27fe7d[0x22] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
	_0x27fe7d[0x4] = 0x0;
	while (_0x27fe7d[0x4] < _0x27fe7d[0x29]['length']) {
		_0x27fe7d[0x1e] = _0x27fe7d[0x29][_0x27fe7d[0x4]]['charCodeAt']();
		_0x27fe7d[0xaf] = _0x27fe7d[0xaf] + _0x27fe7d[0x22][_0x27fe7d[0x1e] >> 0x4] + _0x27fe7d[0x22][_0x27fe7d[0x1e] & 0xf];
		_0x27fe7d[0x4]++;
	}
	return _0x27fe7d[0xaf];
}

function payload_sign(_0xff5a98, _0x35ca8e, _0x3a8c0e, _0x20e1a4) {
	function _0x431781(_0x2e2337, _0x33fd41) {
		let _0x31c0af = [];
		for (let _0x5e6143 = 0x0; _0x5e6143 < _0x2e2337['length']; _0x5e6143 += _0x33fd41) _0x31c0af['push'](_0x2e2337['slice'](_0x5e6143, _0x5e6143 + _0x33fd41));
		return _0x31c0af;
	}
	let _0x57ee6f = 'x1=' + _0xff5a98 + ';x2=' + _0x35ca8e + ';x3=' + _0x3a8c0e + ';x4=' + _0x20e1a4 + ';';
	let _0x187981 = new Buffer['from'](_0x57ee6f)['toString']('base64');
	let _0x3d13cc = _0x431781(_0x187981, 0x8);
	let _0x394971 = '';
	for (let _0x11af3a of _0x3d13cc) {
		_0x394971 += payload_sign_8(_0x11af3a);
	}
	return _0x394971;
}

function x_s_sign(_0x515783, _0x5bd53a, _0x4b307c, _0x3942af, _0x5ad9c6) {
	let _0x5991b5;
	if (_0x3942af == 'POST') {
		_0x5991b5 = md5Hash('url=' + _0x5bd53a + JSON['stringify'](_0x4b307c));
	} else {
		_0x5991b5 = md5Hash('url=' + _0x5bd53a);
	}
	let _0x14b7ad = '0|0|0|1|0|0|1|0|0|0|1|0|0|0|0';
	if (Date['now']() > 0x18c57d2b560) {
		_0x14b7ad = '0|0|0|1|0|0|1|0|0|0|1|0|0|0|1';
	}
	let _0x1520e1 = _0x515783;
	let _0x3d06be = _0x5ad9c6;
	let _0x2cd1a9 = payload_sign(_0x5991b5, _0x14b7ad, _0x1520e1, _0x3d06be);
	str1 = '{\x22signSvn\x22:\x2251\x22,\x22signType\x22:\x22x1\x22,\x22appId\x22:\x22xhs-pc-web\x22,\x22signVersion\x22:\x221\x22,\x22payload\x22:\x22' + _0x2cd1a9 + '\x22}';
	var _0x3d4c4b = 'XYW_';
	_0x3d4c4b = _0x3d4c4b + Buffer['from'](str1, 'utf-8')['toString']('base64');
	return _0x3d4c4b;
}
module['exports'] = {
	'x_s_sign': x_s_sign
};